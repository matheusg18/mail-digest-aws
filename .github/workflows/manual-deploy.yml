name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - prod
      confirm_deploy:
        description: "Confirm deployment"
        required: true
        default: false
        type: boolean

env:
  AWS_REGION: sa-east-1
  PYTHON_VERSION: "3.12"

jobs:
  manual-deploy:
    name: Manual Deploy to ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_deploy == 'true'
    environment: ${{ github.event.inputs.environment }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: poetry install --with dev

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::012985018244:role/github-actions-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Build SAM application
        run: sam build --use-container

      - name: Deploy to ${{ github.event.inputs.environment }}
        run: |
          sam deploy \
            --config-env ${{ github.event.inputs.environment }} \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --capabilities CAPABILITY_IAM

      - name: Get deployment outputs
        run: |
          aws cloudformation describe-stacks \
            --stack-name mail-digest-lambda-${{ github.event.inputs.environment }} \
            --query 'Stacks[0].Outputs' \
            --output table

      - name: Run smoke tests
        run: |
          # Add basic smoke tests here
          echo "Running smoke tests for ${{ github.event.inputs.environment }} environment"
          # Example: Test API endpoints, check Lambda functions are responding, etc.
